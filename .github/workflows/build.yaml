#Workflow name
name: CI/CD Pipeline
on:
  #Manually trigger workflow runs
  workflow_dispatch:
  #Trigger the workflow on push from the main branch
  push:
    branches:
      - main

env:
  TEST_TAG: ayoubensalem/myapp:test

jobs:
  build:
    name: Build
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-20.04
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v3
      #Set up JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run Tests
      - name: Run Tests
        run: mvn -B test
      #Package 
      - name: Package
        run: mvn -U package

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          # load: true
          tags: ${{ env.TEST_TAG }}

      - name: Run container
        run: docker run -d --name app --net host -p 8080:8080 ${{ env.TEST_TAG }}

      - name: Wait for app
        run: ./wait-for-it.sh -t 120 localhost:8080  -- echo "Application has started"
      
      - name: Hit endpoint
        run: curl -v http://localhost:8080/vulnerable